# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  prints(where: PrintWhereInput! = {}, orderBy: [PrintOrderByInput!]! = [], take: Int, skip: Int! = 0): [Print!]
  printsCount(where: PrintWhereInput! = {}): Int
  code: Code
  tag: Tag
  createdAt: DateTime
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input UserWhereUniqueInput {
  id: ID
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  prints: PrintManyRelationFilter
  code: CodeWhereInput
  tag: TagWhereInput
  createdAt: DateTimeNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input PrintManyRelationFilter {
  every: PrintWhereInput
  some: PrintWhereInput
  none: PrintWhereInput
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  createdAt: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  prints: PrintRelateToManyForUpdateInput
  code: CodeRelateToOneForUpdateInput
  tag: TagRelateToOneForUpdateInput
  createdAt: DateTime
}

input PrintRelateToManyForUpdateInput {
  disconnect: [PrintWhereUniqueInput!]
  set: [PrintWhereUniqueInput!]
  create: [PrintCreateInput!]
  connect: [PrintWhereUniqueInput!]
}

input CodeRelateToOneForUpdateInput {
  create: CodeCreateInput
  connect: CodeWhereUniqueInput
  disconnect: Boolean
}

input TagRelateToOneForUpdateInput {
  create: TagCreateInput
  connect: TagWhereUniqueInput
  disconnect: Boolean
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  prints: PrintRelateToManyForCreateInput
  code: CodeRelateToOneForCreateInput
  tag: TagRelateToOneForCreateInput
  createdAt: DateTime
}

input PrintRelateToManyForCreateInput {
  create: [PrintCreateInput!]
  connect: [PrintWhereUniqueInput!]
}

input CodeRelateToOneForCreateInput {
  create: CodeCreateInput
  connect: CodeWhereUniqueInput
}

input TagRelateToOneForCreateInput {
  create: TagCreateInput
  connect: TagWhereUniqueInput
}

type Print {
  id: ID!
  code: String
  user: User
}

input PrintWhereUniqueInput {
  id: ID
  code: String
}

input PrintWhereInput {
  AND: [PrintWhereInput!]
  OR: [PrintWhereInput!]
  NOT: [PrintWhereInput!]
  id: IDFilter
  code: StringFilter
  user: UserWhereInput
}

input PrintOrderByInput {
  id: OrderDirection
  code: OrderDirection
}

input PrintUpdateInput {
  code: String
  user: UserRelateToOneForUpdateInput
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input PrintUpdateArgs {
  where: PrintWhereUniqueInput!
  data: PrintUpdateInput!
}

input PrintCreateInput {
  code: String
  user: UserRelateToOneForCreateInput
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

type Code {
  id: ID!
  code: String
  user: User
}

input CodeWhereUniqueInput {
  id: ID
  code: String
}

input CodeWhereInput {
  AND: [CodeWhereInput!]
  OR: [CodeWhereInput!]
  NOT: [CodeWhereInput!]
  id: IDFilter
  code: StringFilter
  user: UserWhereInput
}

input CodeOrderByInput {
  id: OrderDirection
  code: OrderDirection
}

input CodeUpdateInput {
  code: String
  user: UserRelateToOneForUpdateInput
}

input CodeUpdateArgs {
  where: CodeWhereUniqueInput!
  data: CodeUpdateInput!
}

input CodeCreateInput {
  code: String
  user: UserRelateToOneForCreateInput
}

type Tag {
  id: ID!
  code: String
  user: User
}

input TagWhereUniqueInput {
  id: ID
  code: String
}

input TagWhereInput {
  AND: [TagWhereInput!]
  OR: [TagWhereInput!]
  NOT: [TagWhereInput!]
  id: IDFilter
  code: StringFilter
  user: UserWhereInput
}

input TagOrderByInput {
  id: OrderDirection
  code: OrderDirection
}

input TagUpdateInput {
  code: String
  user: UserRelateToOneForUpdateInput
}

input TagUpdateArgs {
  where: TagWhereUniqueInput!
  data: TagUpdateInput!
}

input TagCreateInput {
  code: String
  user: UserRelateToOneForCreateInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createPrint(data: PrintCreateInput!): Print
  createPrints(data: [PrintCreateInput!]!): [Print]
  updatePrint(where: PrintWhereUniqueInput!, data: PrintUpdateInput!): Print
  updatePrints(data: [PrintUpdateArgs!]!): [Print]
  deletePrint(where: PrintWhereUniqueInput!): Print
  deletePrints(where: [PrintWhereUniqueInput!]!): [Print]
  createCode(data: CodeCreateInput!): Code
  createCodes(data: [CodeCreateInput!]!): [Code]
  updateCode(where: CodeWhereUniqueInput!, data: CodeUpdateInput!): Code
  updateCodes(data: [CodeUpdateArgs!]!): [Code]
  deleteCode(where: CodeWhereUniqueInput!): Code
  deleteCodes(where: [CodeWhereUniqueInput!]!): [Code]
  createTag(data: TagCreateInput!): Tag
  createTags(data: [TagCreateInput!]!): [Tag]
  updateTag(where: TagWhereUniqueInput!, data: TagUpdateInput!): Tag
  updateTags(data: [TagUpdateArgs!]!): [Tag]
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteTags(where: [TagWhereUniqueInput!]!): [Tag]
}

type Query {
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  prints(where: PrintWhereInput! = {}, orderBy: [PrintOrderByInput!]! = [], take: Int, skip: Int! = 0): [Print!]
  print(where: PrintWhereUniqueInput!): Print
  printsCount(where: PrintWhereInput! = {}): Int
  codes(where: CodeWhereInput! = {}, orderBy: [CodeOrderByInput!]! = [], take: Int, skip: Int! = 0): [Code!]
  code(where: CodeWhereUniqueInput!): Code
  codesCount(where: CodeWhereInput! = {}): Int
  tags(where: TagWhereInput! = {}, orderBy: [TagOrderByInput!]! = [], take: Int, skip: Int! = 0): [Tag!]
  tag(where: TagWhereUniqueInput!): Tag
  tagsCount(where: TagWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
